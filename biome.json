{
	"$schema": "https://biomejs.dev/schemas/2.2.2/schema.json",
	"vcs": { "enabled": false, "clientKind": "git", "useIgnoreFile": false },
	"files": { "ignoreUnknown": false },
	"formatter": {
		"enabled": true,
		"formatWithErrors": false,
		"indentStyle": "tab",
		"indentWidth": 2,
		"lineEnding": "lf",
		"lineWidth": 100,
		"attributePosition": "auto",
		"bracketSameLine": false,
		"bracketSpacing": true,
		"expand": "auto",
		"useEditorconfig": true,
		"includes": [
			"**",
			"!**/node_modules/",
			"!**/pnpm-lock.yaml",
			"!**/package-lock.json",
			"!**/yarn.lock",
			"!**/dist/",
			"!**/build/",
			"!**/coverage/",
			"!**/*.log",
			"!**/logs/",
			"!**/.env",
			"!**/.env.local",
			"!**/.env.*.local",
			"!**/.vscode/",
			"!**/.idea/",
			"!**/.DS_Store",
			"!**/Thumbs.db",
			"!**/*.generated.*",
			"!**/*.min.js",
			"!**/*.min.css",
			"!**/CHANGELOG.md",
			"!**/LICENSE"
		]
	},
	"linter": {
		"enabled": true,
		"rules": {
			"recommended": false,
			"complexity": {
				"noAdjacentSpacesInRegex": "error",
				"noExtraBooleanCast": "error",
				"noUselessCatch": "error",
				"noUselessEscapeInRegex": "error"
			},
			"correctness": {
				"noConstAssign": "error",
				"noConstantCondition": "error",
				"noEmptyCharacterClassInRegex": "error",
				"noEmptyPattern": "error",
				"noGlobalObjectCalls": "error",
				"noInvalidBuiltinInstantiation": "error",
				"noInvalidConstructorSuper": "error",
				"noNonoctalDecimalEscape": "error",
				"noPrecisionLoss": "error",
				"noSelfAssign": "error",
				"noSetterReturn": "error",
				"noSwitchDeclarations": "error",
				"noUndeclaredVariables": "error",
				"noUnreachable": "error",
				"noUnreachableSuper": "error",
				"noUnsafeFinally": "error",
				"noUnsafeOptionalChaining": "error",
				"noUnusedLabels": "error",
				"noUnusedPrivateClassMembers": "error",
				"noUnusedVariables": "error",
				"useIsNan": "error",
				"useValidForDirection": "error",
				"useValidTypeof": "error",
				"useYield": "error"
			},
			"style": { "useBlockStatements": "off" },
			"suspicious": {
				"noAsyncPromiseExecutor": "error",
				"noCatchAssign": "error",
				"noClassAssign": "error",
				"noCompareNegZero": "error",
				"noConstantBinaryExpressions": "error",
				"noControlCharactersInRegex": "error",
				"noDebugger": "error",
				"noDuplicateCase": "error",
				"noDuplicateClassMembers": "error",
				"noDuplicateElseIf": "error",
				"noDuplicateObjectKeys": "error",
				"noDuplicateParameters": "error",
				"noEmptyBlockStatements": "error",
				"noFallthroughSwitchClause": "error",
				"noFunctionAssign": "error",
				"noGlobalAssign": "error",
				"noImportAssign": "error",
				"noIrregularWhitespace": "error",
				"noMisleadingCharacterClass": "error",
				"noPrototypeBuiltins": "error",
				"noRedeclare": "error",
				"noShadowRestrictedNames": "error",
				"noSparseArray": "error",
				"noUnsafeNegation": "error",
				"noUselessRegexBackrefs": "error",
				"noWith": "error",
				"useGetterReturn": "error"
			}
		},
		"includes": [
			"**",
			"!node_modules/**",
			"!dist/**",
			"!.cursor/**",
			"!public/**",
			"!src/app/webui/.next/**",
			"!src/app/webui/out/**",
			"!src/app/ui/.next/**",
			"!src/app/ui/out/**",
			"!src/app/ui/.eslintrc.js",
			"!**/build/**",
			"!**/coverage/**",
			"!test-temp/**",
			"!**/*.min.js",
			"!**/generated/**",
			"!docs/.docusaurus/**",
			"!scripts/dev.js",
			"!scripts/dev-status.js",
			"!src/app/web/client/script.js",
			"!src/app/webui/tailwind.config.js"
		]
	},
	"javascript": {
		"formatter": {
			"jsxQuoteStyle": "single",
			"quoteProperties": "asNeeded",
			"trailingCommas": "es5",
			"semicolons": "always",
			"arrowParentheses": "asNeeded",
			"bracketSameLine": false,
			"quoteStyle": "single",
			"attributePosition": "auto",
			"bracketSpacing": true
		}
	},
	"html": { "formatter": { "selfCloseVoidElements": "always" } },
	"overrides": [
		{
			"includes": ["**/*.ts"],
			"javascript": {
				"globals": [
					"Element",
					"HTMLImageElement",
					"localStorage",
					"__dirname",
					"AbortController",
					"setInterval",
					"beforeEach",
					"beforeAll",
					"HTMLAnchorElement",
					"CustomEvent",
					"setTimeout",
					"clearInterval",
					"global",
					"module",
					"Event",
					"process",
					"EventListener",
					"it",
					"Node",
					"window",
					"setImmediate",
					"console",
					"WebSocket",
					"HTMLElement",
					"document",
					"expect",
					"FileReader",
					"RequestInit",
					"vi",
					"afterEach",
					"clearImmediate",
					"fetch",
					"clearTimeout",
					"structuredClone",
					"require",
					"NodeJS",
					"Response",
					"Buffer",
					"describe",
					"afterAll",
					"test",
					"URL",
					"AbortSignal"
				]
			},
			"linter": {
				"rules": {
					"correctness": { "noUnusedVariables": "warn" },
					"suspicious": {
						"noConsole": "off",
						"noDuplicateClassMembers": "off",
						"noExplicitAny": "off"
					}
				}
			}
		},
		{
			"includes": ["**/*.config.js", "eslint.config.js"],
			"javascript": {
				"globals": [
					"setImmediate",
					"console",
					"setTimeout",
					"process",
					"Buffer",
					"setInterval",
					"clearImmediate",
					"clearTimeout",
					"clearInterval"
				]
			},
			"linter": {
				"rules": {
					"correctness": { "noUnusedVariables": "warn" },
					"suspicious": { "noConsole": "off" }
				}
			}
		},
		{
			"includes": ["**/*.js", "!**/*.config.js", "!eslint.config.js"],
			"javascript": {
				"globals": [
					"setImmediate",
					"console",
					"setInterval",
					"__dirname",
					"exports",
					"clearImmediate",
					"clearTimeout",
					"clearInterval",
					"require",
					"setTimeout",
					"module",
					"__filename",
					"global",
					"process",
					"Buffer"
				]
			},
			"linter": {
				"rules": {
					"correctness": { "noUnusedVariables": "warn" },
					"suspicious": { "noConsole": "off" }
				}
			}
		},
		{
			"includes": ["app/web/client/script.js"],
			"javascript": {
				"globals": ["document", "console", "WebSocket", "setTimeout", "clearTimeout", "window"]
			},
			"linter": { "rules": { "correctness": { "noUnusedVariables": "warn" } } }
		}
	],
	"assist": {
		"enabled": true,
		"actions": { "source": { "organizeImports": "on" } }
	}
}
